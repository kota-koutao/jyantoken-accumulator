# 命令: 以下の設計書に基づいて、テキストベースのゲームを作成してください。

# ゲームの基本情報
- **タイトル:** ワードレスキュー！
- **コンセプト:** プレイヤーがアルファベットを1文字ずつ推測し、隠された英単語を当てるハングマンゲーム。
- **ターゲット:** 中学1年～2年生

# ゲームの要素
- **問題リスト:**
  - **かんたん (中学1年レベル):** apple, book, cat, desk, pen
  - **ふつう (中学2年レベル):** school, summer, friend, music, train
- **ライフ（チャンスの回数）:** 6回

# ゲームの流れ（フロー）
1.  ゲームが開始したら、まず「かんたん」か「ふつう」のレベルを選択させる。
2.  選択されたレベルの問題リストから、ランダムに単語を1つ選び、内部的に「正解の単語」として設定する。
3.  画面に、正解の単語の文字数分の「_」（アンダースコア）を表示する。
4.  プレイヤーにアルファベットを1文字入力させる。
5.  入力された文字を判定する。
    - **正解の場合:** 「_」の該当する箇所をその文字に置き換えて表示する。全ての「_」が埋まったら、手順7に進む。
    - **不正解の場合:** ライフを1減らす。ライフが0になったら、手順8に進む。
6.  正解・不正解に関わらず、現在の単語の状況、残りライフ、使用済み（不正解）のアルファベット一覧を表示し、手順4に戻る。
7.  **（クリア処理）** 「ゲームクリア！」というメッセージと、完成した単語、その単語の日本語の意味を表示してゲームを終了する。
8.  **（ゲームオーバー処理）** 「ゲームオーバー...」というメッセージと、正解だった単語を表示してゲームを終了する。

# 画面表示のルール (UI)
- **常に表示するもの:**
  - 現在の単語の状況 (例: `a p p _ e`)
  - 残りライフ数 (例: `残りチャンス: 4`)
  - 間違えたアルファベットの一覧 (例: `ミス: s, t, d`)
- **入力促進メッセージ:**
  - 「アルファベットを1文字入力してください:」
- **クリア時のメッセージ:**
  - 例: 「クリア！正解は 'apple' (りんご) でした！」
- **ゲームオーバー時のメッセージ:**
  - 例: 「残念！正解は 'apple' でした。」